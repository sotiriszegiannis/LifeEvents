@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@inject LifeEventsRepository LifeEventsRepository
@inject ISnackbar Snackbar
<MudGrid>
    <MudItem xs="12" sm="12">
        <MudPaper Class="pa-4">
            <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors" ReadOnly="false">
                <MudTextField T="string" Label="Title" Required="true" RequiredError="Title is required!" @bind-Value="LifeEventDTO.Name" />
                <MudTextField T="string" Label="Description" @bind-Value="LifeEventDTO.Description" />
                <MudNumericField HideSpinButtons="true" @bind-Value="LifeEventDTO.DurationInMinutes" Label="Duration" />
                <MudDatePicker Label="From" @bind-Date="from" />
                <MudDatePicker Label="To" @bind-Date="to" />
                <MudTextField T="string" Label="Location" @bind-Value="LifeEventDTO.Location" />
            </MudForm>
        </MudPaper>
        <MudPaper Class="pa-4 mt-4">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" DisableElevation="true" OnClick="OnSaveClick">Save</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" DisableElevation="true" OnClick="@(()=>form.Reset())" Class="mx-2">Cancle</MudButton>
        </MudPaper>
    </MudItem>
</MudGrid>


@code {
    DateTime? from = DateTime.Today;
    DateTime? to = DateTime.Today;
    bool success;
    string[] errors = { };
    MudTextField<string> pwField1;
    MudForm form;
    LifeEventRDTO LifeEventDTO = new Repository.LifeEventRDTO();
    private async Task OnSaveClick()
    {
        await form.Validate();
        if (form.IsValid)
        {
            LifeEventDTO.From = from ?? default(DateTime);
            LifeEventDTO.To = to ?? default(DateTime);
            var id = await LifeEventsRepository.Save(LifeEventDTO);
            if (id > 0)
                Snackbar.Add("Saved!", Severity.Success);
            else
                Snackbar.Add("An error occured!", Severity.Error);
        }
    }
}